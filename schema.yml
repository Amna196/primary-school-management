openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/homework/:
    get:
      operationId: listHomeworks
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Homework'
          description: ''
      tags:
      - api
  /api/homework/{id}/:
    get:
      operationId: retrieveHomework
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Homework'
          description: ''
      tags:
      - api
  /api/test/:
    get:
      operationId: listtest_views
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/schema/:
    get:
      operationId: listSpectaculars
      description: 'OpenApi3 schema for this API. Format can be selected via content
        negotiation.


        - YAML: application/vnd.oai.openapi

        - JSON: application/vnd.oai.openapi+json'
      parameters: []
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: array
                items: {}
            application/yaml:
              schema:
                type: array
                items: {}
            application/vnd.oai.openapi+json:
              schema:
                type: array
                items: {}
            application/json:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/schema/swagger-ui/:
    get:
      operationId: listSpectacularSwaggers
      description: ''
      parameters: []
      responses:
        '200':
          content:
            text/html:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/schema/redoc/:
    get:
      operationId: listSpectacularRedocs
      description: ''
      parameters: []
      responses:
        '200':
          content:
            text/html:
              schema:
                type: array
                items: {}
          description: ''
      tags:
      - api
  /api/login/:
    post:
      operationId: createTokenObtainPair
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenObtainPair'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenObtainPair'
          description: ''
      tags:
      - api
  /api/login/refresh/:
    post:
      operationId: createTokenRefresh
      description: 'Takes a refresh type JSON web token and returns an access type
        JSON web

        token if the refresh token is valid.'
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenRefresh'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenRefresh'
          description: ''
      tags:
      - api
  /api/register/:
    post:
      operationId: createUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
  /api/homework/create/:
    post:
      operationId: createHomework
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Homework'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Homework'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Homework'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Homework'
          description: ''
      tags:
      - api
  /api/homework/{id}/update/:
    put:
      operationId: updateHomework
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this homework.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Homework'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Homework'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Homework'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Homework'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateHomework
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this homework.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Homework'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Homework'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Homework'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Homework'
          description: ''
      tags:
      - api
  /api/homework/{id}/delete/:
    delete:
      operationId: destroyHomework
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this homework.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
components:
  schemas:
    Homework:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
        due_date:
          type: string
          format: date-time
        class_id:
          type: string
          maxLength: 20
      required:
      - title
      - description
      - due_date
      - class_id
    TokenObtainPair:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
        password:
          type: string
          writeOnly: true
      required:
      - username
      - password
    TokenRefresh:
      type: object
      properties:
        refresh:
          type: string
        access:
          type: string
          readOnly: true
      required:
      - refresh
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        username:
          type: string
          description: Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+\z
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        password:
          type: string
          writeOnly: true
          maxLength: 128
        role:
          enum:
          - staff
          - guardian
          type: string
      required:
      - username
      - email
      - password
